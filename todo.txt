Redesigned message flow.

Tasks:
[ ] Viewstream integration
  [X] outputview splittable into multiple isolated trees w/ subviews
  [X] command pipeline generator (list, units, pipes)
  [X] write universal server/client router 
   [X] update router format
   [X] update worker
   [X] update handlers for builtins + manual view alloc
   [X] implement pipeline view alloc
   [X] update client format
   [X] update client callbacks
   [ ] update view/frame DOM handling
   [ ] do test run with CD
   [ ] do test run with LS
   [ ] run pipeline test
  [.] output formatter
  [X] run built-in
  [ ] run unix
  [ ] output formatter: http get. txt, png/jpg. include headers option
[ ] 5-pipe command execution
[ ] unix command execution
[ ] filesystem autocomplete
[ ] command decoration
[ ] interactive execution
[ ] inline man-pages tips
[ ] version control
[ ] interactive quicklook

[.] data/view stream multipipes.
[ ] File autocompletion
[ ] cat/echo Piping + progress bar
[ ] refactor/standardize view bridge onto standard DOM
[ ] file < input piping, use node-mime to detect type?
[ ] Improve typography of directory listing

Prototype:

1) UI prototypes

[alpha] Token field
  [X] plain text
  [X] encapsed string
  [X] token transmutation
  [X] refactored code into separate files + object literal style
  [X] design mockup
  [X] commandstream mockup
  [X] move validity of selection anchor/focus pos into selection obj, out of caret obj
  [X] caret left/right with fulltoken input
  [X] autocomplete popup / edit mode
  [X] clickable mouse position
  [X] fix event bindings lost when clicking inside textfield
  [X] Unify tokenlist and commandlist into collection class, derive from.
  [ ] mouseclick caret is off by ~8px, but only in first token 
  [ ] fix backspacing around edges of tokens
  [ ] caret positions around allowempty tokens and ^/$
  [ ] add icon/spinner support to tokens
  [ ] switch between inline and block tokens -> input vs textarea.
  [ ] fix wrapping of tokens
  [ ] caret.remove() shouldn't need to touch tokenList when pruning empties -> let triggers do it
  [ ] | and >> token support
    
  [?] write external bindings for tokenfield
    => tokenfield abstracts, interface for matching should be only multiregexp + callback
    . on change -> process tokens, apply multiregexps
    . register multiregexp
    . execute command
  [?] rewrite $element / $markup pattern to create new $markup on demand when doing insert/remove from DOM

[X] inline autocomplete
  [X] panel overlayed on token
  [X] alignment
  [X] keyboard controls up/down
  [X] hit enter after autocomplete in empty token -> undefined
  [X] escape to close popup
  [ ] autocomplete icons, markup, widgets, etc
  
[ ] command view
  [X] list of collapsible sections
  [X] host token field
  [X] context bar by command
  [X] anchored scrolling
  [X] host output
  [X] make outputnode tree changes reflect in DOM transparently
  [X] fix view.add mid-node insertion
  [X] auto-expand to fill view
  [ ] command history
  [ ] alt-up/down to change focus
  [ ] tabbed views
  [ ] add forking the view with tabs and hosted/nested sessions

2) Command/token autocomplete
  [X] token multi-regexp patterns
  [X] triggers system, unify with token field triggers a bit?
  [X] autocomplete a string / command
  [X] autocomplete empties
  [ ] autocomplete commands
  [ ] autocomplete filesystem
  [ ] autocomplete dir / file distinction
  [ ] badge tokens with one/many/command icons

3) Smart output with selectable things
  [X] research FastCGI socket protocol
  [X] add socket.io to client
  [X] make socket connection to daemon
  [X] set up client handling
  [X] establish controller for stream
  [X] invoke new session
  [X] basic message output
  [X] view parser/tree on client side
  [X] list of files
  [X] file icons
  [ ] implement view DOM v2 with path targeting
  [ ] auto-layout mechanism w/ padded max-height on view
  [ ] auto-layout column width (preferred size from widgets + widget variant/style)
  [ ] make file icons cacheable long-term in webkit cache
  [ ] stable multi-column layout
  [ ] intercontrol focus / caret, set up global manager
  [ ] tab, switch between widgets.
  [ ] smart tab-tabling layout for plain-text

4) NodeKit daemon
  [X] socket.io listener
  [X] keep state of sessions
  [X] export environment
  [X] allow path navigation
+ [X] worker process
    [X] refactor processor.js handler/return handling
    [X] spawn process
    [X] stream in/out json packets
    [X] view proxy object on worker side
    [X] make ls / cd commands
    [X] simplify message format to raw json
    [ ] viewstream integration
+   [ ] arrange pipes for command/view

  [ ] sudo support (askpass env?)

5) Command Suite
[ ] make a script for git (arguments, file/dir, ...)
[ ] basic top/w infographs + live update
[ ] robust unix basics
[ ] mysql console
[ ] ssh support
